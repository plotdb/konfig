doctype html
html
  include /../../static/assets/lib/bootstrap.ldui/main/index.pug
  include /../../static/assets/lib/ldview/main/ldview.pug
  include /../../static/assets/lib/ldpalettepicker/main/ldpp.pug
  head
    +css("/assets/lib/bootstrap/main/css/bootstrap.min.css")
    +css("/assets/lib/bootstrap.ldui/main/bootstrap.ldui.min.css")
    +css("/assets/lib/ldiconfont/main/ldif.min.css")
    +css("/assets/lib/ldpalettepicker/main/ldpp.min.css")
    +css("/assets/lib/@loadingio/ldcolorpicker/main/ldcp.min.css")
    +css("/assets/lib/ldslider/main/ldrs.min.css")
    +css("/assets/lib/ldcover/main/ldcv.min.css")
    +css("/css/index.css")
    style(type="text/css"): :stylus
      @font-face {
        font-family: 'ldi';
        font-weight: normal;
        font-style: normal;
        src: url('/assets/lib/ldiconfont/main/ldif.ttf') format('truetype');
      }
      .ctrl
        margin: 0 0 .5em 0
        [ld=name]
          margin: 0


  body
    .ldcv.default-size: .base: .inner: +ldPalettePicker

    #ctrl-color.d-none
      +scope().ctrl
        .flex-grow-1(ld="name") color
        .color
          input.form-control(ld="input",
          value="#eee",data-cpclass="no-button compact-palette flat",
          data-toggle="colorpicker",data-context="random",data-exclusive="true")
          .inner(ld="color")
        style(type="@plotdb/block"): :stylus
          .color
            position: relative
            .inner
              background: #f00
              width: .5em
              height: 1.75em
              position: absolute
              top: 5px
              right: 5px
              border-radius: 5px
              border: 1px solid rgba(0,0,0,.1)
            .form-control-sm + .inner
              height: 1.4em
              width: .4em
            .form-control-lg + .inner
              height: 2.3em


        script(type="@plotdb/block"): :lsc
          {
            init: ({root}) ->
              @color = \#f00
              @view = new ldView do
                root: root
                init: input: ({node}) ~>
                  @ldcp = new ldColorPicker node, {className: 'no-button compact-palette flat'}
                  @color = ldColor.web @ldcp.getColor!
                  @ldcp.on \change, ~>
                    @color = it
                    @view.render \color
                handler:
                  color: ({node}) ~>
                    node.style.backgroundColor = ldColor.web( @color )
          }

    #ctrl-palette.d-none
      +scope().ctrl
        .flex-grow-1(ld="name") palette
        .ldp.w-100(ld="palette")
          .colors: .color(ld-each="color")
        script(type="@plotdb/block"): :lsc
          {
            init: ({root}) ->
              @pal = {name: "untiled", colors: <[#f00 #0f0 #00f]>}
              @ldpp = new ldPalettePicker root: '[ldPalettePicker]', ldcv: true, palettes: ldPalettePicker.get('all')
              @view = new ldView do
                root: root
                action: click:
                  palette: ({node}) ~>
                    @ldpp.get!then ~>
                      if !it => return
                      @pal = it; @view.render!
                handler:
                  color:
                    list: ~> @pal.colors
                    handler: ({node, data}) -> node.style.backgroundColor = ldColor.web(data)

          }

    #ctrl-choice.d-none
      +scope().ctrl
        .flex-grow-1(ld="name") choice
        select.form-control(ld="select")
          option(ld-each="option")
        script(type="@plotdb/block"): :lsc
          {
            init: ({root}) ->
              @options = [0 to 10]
              @view = new ldView do
                root: root
                action: change:
                  select: ({node,evt}) -> console.log node.value
                handler:
                  option:
                    list: ~> @options
                    text: ({data}) -> data
          }

    #ctrl-boolean.d-none
      +scope().ctrl
        .d-flex
          .flex-grow-1(ld="name") boolean
          div(ld="function")
            i.i-pen.ml-2(ld="raw-edit")
            i.i-question-circle.ml-2(ld="info")
        .d-flex(ld="widget")
          .btn-group.flex-grow-1
            .btn.btn-outline-secondary(ld="btn",data-value="true") Yes
            .btn.btn-outline-secondary(ld="btn",data-value="false") No
        script(type="@plotdb/block"): :lsc
          {
            init: ({root}) ->
              @data = state: false
              @view = new ldView do
                root: root
                action: click: do
                  btn: ~> @data.state = !@data.state; @view.render!
                text:
                  name: -> "sample name"
                handler:
                  btn: ({node}) ~>
                    node.classList.toggle \active, !(@data.state xor (node.getAttribute(\data-value) == \true))
          }

    #container.w-480.rwd.mx-auto.my-4
    //-.w-480.rwd.mx-auto.my-4
      hr
      .item
        .d-flex
          .flex-grow-1(ld="name") boolean
          div(ld="function")
            i.i-pen.ml-2(ld="raw-edit")
            i.i-question-circle.ml-2(ld="info")
        .d-flex(ld="widget")
          .btn-group.flex-grow-1
            .btn.btn-outline-secondary(data-value="true") Yes
            .btn.btn-outline-secondary(data-value="false") No
        input(name=name,type="hidden")
      .item
        .flex-grow-1(ld="name") choice
        select.form-control(name=name)
      .item
        .flex-grow-1(ld="name") text
        input.form-control(name=name,value="loading.io")
      .item
        .d-flex
          .flex-grow-1(ld="name") number
          div(ld="function")
            i.i-pen.ml-2(ld="raw-edit")
            i.i-question-circle.ml-2(ld="info")
        .ldrs(ld="widget")

    +script("/assets/lib/@loadingio/ldquery/main/ldq.min.js")
    +script("/assets/lib/@loadingio/debounce.js/main/debounce.min.js")
    +script("/assets/lib/ldcover/main/ldcv.min.js")
    +script("/assets/lib/ldcolor/main/ldColor.min.js")
    +script("/assets/lib/@loadingio/ldcolorpicker/main/ldcp.min.js")
    +script("/assets/lib/proxise/main/proxise.min.js")
    +script("/assets/lib/ldview/main/ldview.min.js")
    +script("/assets/lib/ldpalettepicker/main/ldpp.min.js")
    +script("/assets/lib/ldpalettepicker/main/all.palettes.js")
    +script("/assets/lib/@plotdb/datadom/main/datadom.js")
    +script("/assets/lib/@plotdb/rescope/main/rescope.js")
    +script("/assets/lib/@plotdb/csscope/main/csscope.js")
    +script("/assets/lib/@plotdb/block/main/block.js")
    +script("/assets/lib/ldslider/main/ldrs.min.js")
    +script("/js/index.js")
    +script("/js/block.js")
